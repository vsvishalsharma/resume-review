"use client";

// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Read from Next.js public env vars (inlined at build time)
const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL as string | undefined;
const SUPABASE_PUBLISHABLE_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY as string | undefined;

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  throw new Error(
    'Missing Supabase environment variables. Please set NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY.'
  );
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

const isBrowser = typeof window !== 'undefined';

// Provide a no-op storage on the server to avoid touching global localStorage
const safeStorage: Storage | { getItem: (k: string) => null; setItem: (k: string, v: string) => void; removeItem: (k: string) => void } =
  isBrowser
    ? window.localStorage
    : {
        getItem: () => null,
        setItem: () => {},
        removeItem: () => {},
      };

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: safeStorage as Storage,
    persistSession: true,
    autoRefreshToken: isBrowser,
    detectSessionInUrl: isBrowser,
  }
});